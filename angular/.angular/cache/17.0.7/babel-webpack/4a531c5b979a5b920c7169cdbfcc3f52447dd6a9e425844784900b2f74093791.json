{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nlet AuthService = class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://127.0.0.1:8000/api';\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  register(data) {\n    return this.http.post(`${this.baseUrl}/register`, data);\n  }\n  login(data) {\n    return this.http.post(`${this.baseUrl}/login`, data);\n    // is being sent and also saved in the storage console.log(data);\n  }\n\n  me(data) {\n    return this.http.post(`${this.baseUrl}/me`, data);\n  }\n  sendPasswordResetLink(data) {\n    return this.http.post(`${this.baseUrl}/sendPasswordResetLink`, data);\n  }\n  changePassword(data) {\n    return this.http.post(`${this.baseUrl}/resetPassword`, data);\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nAuthService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [HttpClient])], AuthService);\nexport { AuthService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}