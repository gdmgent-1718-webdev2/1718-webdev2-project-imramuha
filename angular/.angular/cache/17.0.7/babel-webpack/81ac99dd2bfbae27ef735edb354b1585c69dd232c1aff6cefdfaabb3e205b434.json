{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport __NG_CLI_RESOURCE__0 from \"./edit-fish.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./edit-fish.component.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SnotifyService } from 'ng-snotify';\nimport * as moment from 'moment';\nimport { AccountService } from '../../../../../services/account.service';\nimport { humanizeBytes } from 'ngx-uploader';\nlet EditFishComponent = class EditFishComponent {\n  constructor(accountService, notify, Notfiy, route, router) {\n    this.accountService = accountService;\n    this.notify = notify;\n    this.Notfiy = Notfiy;\n    this.route = route;\n    this.router = router;\n    this.minDate = new Date(2023, 2, 1);\n    this.maxDate = this.getTomorrow();\n    this.file_src = \"../assets/img/default_avatar.png\";\n    this.options = {\n      concurrency: 1,\n      maxUploads: 1,\n      maxFileSize: 1000000\n    };\n    this.files = [];\n    this.uploadInput = new EventEmitter();\n    this.humanizeBytes = humanizeBytes;\n  }\n  ngOnInit() {\n    this.getOneFish();\n    this.getAllCategories();\n    this.getAllSubcategories();\n  }\n  getTomorrow() {\n    const tomorrow = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    return tomorrow;\n  }\n  getOneFish() {\n    const id = this.route.snapshot.params['id'];\n    this.accountService.showFish(id).subscribe(fish => {\n      this.fish = fish[0];\n      this.fish.id = id;\n      this.file_src = this.fish.image;\n      console.log(this.fish);\n    });\n  }\n  getAllCategories() {\n    this.accountService.showAllFishes().subscribe(categories => {\n      this._categories = categories[1];\n    });\n  }\n  getAllSubcategories() {\n    this.accountService.showAllFishes().subscribe(subcategories => {\n      this._subcategories = subcategories[2];\n    });\n  }\n  goBack() {\n    this.router.navigate(['/account/fishes']);\n  }\n  // Function for handling file uploads\n  onUploadOutput(output) {\n    switch (output.type) {\n      case 'allAddedToQueue':\n        break;\n      case 'addedToQueue':\n        if (typeof output.file !== 'undefined') {\n          this.files.push(output.file);\n        }\n        break;\n      case 'uploading':\n        if (typeof output.file !== 'undefined') {\n          const index = this.files.findIndex(file => typeof output.file !== 'undefined' && file.id === output.file.id);\n          this.files[index] = output.file;\n        }\n        break;\n      case 'removed':\n        this.files = this.files.filter(file => file !== output.file);\n        break;\n      case 'dragOver':\n        this.dragOver = true;\n        break;\n      case 'dragOut':\n      case 'drop':\n        this.dragOver = false;\n        break;\n      case 'done':\n        // The file is downloaded\n        break;\n    }\n  }\n  // Function for removing the uploaded image\n  imageRemove() {\n    this.files = []; // Clear the files array\n    this.fish.image = null; // Remove the image by setting the property to null\n    this.file_src = \"../assets/img/default_avatar.png\";\n  }\n  // Function for updating the fish details\n  updateFish() {\n    this.fish.birthdate = moment(this.fish.birthdate).format('YYYY-MM-DD');\n    // Include the image file in the form data if available\n    if (this.files.length > 0) {\n      this.formData = new FormData();\n      this.formData.append('image', this.files[0].nativeFile);\n    }\n    // Add other form fields to the formData\n    this.formData.append('name', this.fish.name);\n    this.formData.append('birthdate', this.fish.birthdate);\n    // ... (add other form fields)\n    this.accountService.editFish(this.formData).subscribe(response => {\n      console.log(response);\n      this.router.navigate(['/account/fishes']);\n      this.Notfiy.success(response.response, {\n        timeout: 2500\n      });\n    });\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: AccountService\n  }, {\n    type: SnotifyService\n  }, {\n    type: SnotifyService\n  }, {\n    type: ActivatedRoute\n  }, {\n    type: Router\n  }];\n};\nEditFishComponent = __decorate([Component({\n  selector: 'app-edit-fish',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n}), __metadata(\"design:paramtypes\", [AccountService, SnotifyService, SnotifyService, ActivatedRoute, Router])], EditFishComponent);\nexport { EditFishComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}