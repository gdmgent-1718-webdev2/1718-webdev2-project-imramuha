{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injectable } from '@angular/core';\nimport { HTTP_INTERCEPTORS, HttpHeaders } from '@angular/common/http';\nlet RequestOptionsService = class RequestOptionsService {\n  intercept(request, next) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    });\n    const newRequest = request.clone({\n      headers\n    });\n    return next.handle(newRequest);\n  }\n};\nRequestOptionsService = __decorate([Injectable()], RequestOptionsService);\nexport { RequestOptionsService };\n// Provide the interceptor using the HTTP_INTERCEPTORS multi-token\nexport const RequestOptionsProvider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: RequestOptionsService,\n  multi: true\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}