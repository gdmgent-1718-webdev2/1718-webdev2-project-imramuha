{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nlet AccountService = class AccountService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = 'http://127.0.0.1:8000/api';\n  }\n  getHeaders() {\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    });\n  }\n  getRequestOptions() {\n    return {\n      headers: this.getHeaders()\n    };\n  }\n  /*\n  * PROFILE\n  */\n  showUser() {\n    return this.httpClient.get(`${this.baseUrl}/account/profile`, this.getRequestOptions());\n  }\n  selectUser() {\n    return this.httpClient.get(`${this.baseUrl}/account/profile/select`, this.getRequestOptions());\n  }\n  editProfile(info) {\n    const data = JSON.stringify(info);\n    return this.httpClient.post(`${this.baseUrl}/account/profile/edit`, data, this.getRequestOptions());\n  }\n  /*\n  * FISHES\n  */\n  addFish(info) {\n    return this.httpClient.post(`${this.baseUrl}/account/fishes/create`, info, this.getRequestOptions());\n  }\n  showAllFishes() {\n    return this.httpClient.get(`${this.baseUrl}/account/fishes`, this.getRequestOptions());\n  }\n  showFish(id) {\n    return this.httpClient.get(`${this.baseUrl}/account/fishes/select/${id}`, this.getRequestOptions());\n  }\n  editFish(info) {\n    const data = JSON.stringify(info);\n    console.log(data);\n    return this.httpClient.post(`${this.baseUrl}/account/fishes/edit`, data, this.getRequestOptions());\n  }\n  deleteFish(id) {\n    return this.httpClient.get(`${this.baseUrl}/account/fishes/delete/${id}`, this.getRequestOptions());\n  }\n  /*\n  * BIDS\n  */\n  addBid(info) {\n    return this.httpClient.post(`${this.baseUrl}/account/bids/create`, info, this.getRequestOptions());\n  }\n  showMyBids() {\n    return this.httpClient.get(`${this.baseUrl}/account/bids`, this.getRequestOptions());\n  }\n  showBid(id) {\n    return this.httpClient.get(`${this.baseUrl}/account/bids/select/${id}`, this.getRequestOptions());\n  }\n  publishBid(info) {\n    return this.httpClient.post(`${this.baseUrl}/account/bids/edit/`, info, this.getRequestOptions());\n  }\n  deleteBid(id) {\n    return this.httpClient.get(`${this.baseUrl}/account/bids/delete/${id}`, this.getRequestOptions());\n  }\n  /*\n  * OFFERS\n  */\n  /*\n  * AUCTIONS\n  */\n  showAuctions() {\n    return this.httpClient.get(`${this.baseUrl}/auctions`, this.getRequestOptions());\n  }\n  showAuction(id) {\n    return this.httpClient.get(`${this.baseUrl}/auctions/select/${id}`, this.getRequestOptions());\n  }\n  raiseBid(info) {\n    return this.httpClient.post(`${this.baseUrl}/auctions/raise-bid`, info, this.getRequestOptions());\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nAccountService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [HttpClient])], AccountService);\nexport { AccountService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}