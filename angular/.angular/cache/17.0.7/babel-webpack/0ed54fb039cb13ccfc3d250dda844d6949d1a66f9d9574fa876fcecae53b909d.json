{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar _a;\nimport __NG_CLI_RESOURCE__0 from \"./publish-bid.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./publish-bid.component.scss?ngResource\";\nimport { Component, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from '../../../../../services/account.service';\nimport * as moment from 'moment';\nlet PublishBidComponent = class PublishBidComponent {\n  constructor(cdRef, accountService, notifierService, route, router) {\n    this.cdRef = cdRef;\n    this.accountService = accountService;\n    this.route = route;\n    this.router = router;\n    this.todayDate = new Date().getDate();\n    // before tomorrow || after 2 weeks\n    this.minDate = new Date(new Date().setDate(this.todayDate + 1));\n    this.maxDate = new Date(new Date().setDate(this.todayDate + 14));\n    this.error = null;\n    this.notifier = notifierService;\n  }\n  ngOnInit() {\n    this.getOneBid();\n    this.getMyFishes();\n  }\n  getOneBid() {\n    const id = this.route.snapshot.params['id'];\n    console.log(id);\n    this.accountService.showBid(id).subscribe(bid => {\n      console.log(bid), this._bid = bid[0];\n      console.log(this._bid);\n      this._bid.id = id;\n      this._bid.days_or_hours = 'hours';\n      console.log(this._bid.id);\n      console.log(this._bid.bid);\n      console.log(this._bid.fish_id);\n      console.log(this._bid.started_at);\n      console.log(this._bid.ended_at);\n      // date to hours\n      const _started_at = this._bid.started_at;\n      const _ended_at = this._bid.ended_at;\n      const diffInMs = Date.parse(_ended_at) - Date.parse(_started_at);\n      const diffInHours = diffInMs / 1000 / 60 / 60;\n      this._bid.ended_at = diffInHours.toFixed();\n      // date format\n      this._bid.started_at = moment(this._bid.started_at).format(\"YYYY-MM-DD\");\n    });\n  }\n  getMyFishes() {\n    this.accountService.showMyBids().subscribe(fishes => {\n      this._fishes = fishes[1];\n    });\n  }\n  goBack() {\n    this.router.navigate(['/account/bids']);\n  }\n  // function for update\n  publishBid() {\n    this.accountService\n    //API call\n    .publishBid(this._bid).subscribe(response => {\n      console.log(response);\n      this.router.navigate(['/account/bids']);\n      this.notifier.notify(\"success\", response.response);\n    });\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: ChangeDetectorRef\n  }, {\n    type: AccountService\n  }, {\n    type: undefined\n  }, {\n    type: ActivatedRoute\n  }, {\n    type: Router\n  }];\n};\nPublishBidComponent = __decorate([Component({\n  selector: 'app-publish-bid',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n}), __metadata(\"design:paramtypes\", [ChangeDetectorRef, AccountService, typeof (_a = typeof NotifierService !== \"undefined\" && NotifierService) === \"function\" ? _a : Object, ActivatedRoute, Router])], PublishBidComponent);\nexport { PublishBidComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}